C51 COMPILER V9.52.0.0   ADC                                                               09/07/2023 18:07:15 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE ADC
OBJECT MODULE PLACED IN .\Objects\adc.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Code\Lib\adc.c OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Code\CMS;.\Code\Lib;.
                    -\Code\User;.\Code\Hardware\UART) DEBUG PRINT(.\Listings\adc.lst) TABS(2) OBJECT(.\Objects\adc.obj)

line level    source

   1          /*******************************************************************************
   2          * Copyright (C) 2019 China Micro Semiconductor Limited Company. All Rights Reserved.
   3          *
   4          * This software is owned and published by:
   5          * CMS LLC, No 2609-10, Taurus Plaza, TaoyuanRoad, NanshanDistrict, Shenzhen, China.
   6          *
   7          * BY DOWNLOADING, INSTALLING OR USING THIS SOFTWARE, YOU AGREE TO BE BOUND
   8          * BY ALL THE TERMS AND CONDITIONS OF THIS AGREEMENT.
   9          *
  10          * This software contains source code for use with CMS
  11          * components. This software is licensed by CMS to be adapted only
  12          * for use in systems utilizing CMS components. CMS shall not be
  13          * responsible for misuse or illegal use of this software for devices not
  14          * supported herein. CMS is providing this software "AS IS" and will
  15          * not be responsible for issues arising from incorrect user implementation
  16          * of the software.
  17          *
  18          * This software may be replicated in part or whole for the licensed use,
  19          * with the restriction that this Disclaimer and Copyright notice must be
  20          * included with each copy of this software, whether used in part or whole,
  21          * at all times.
  22          */
  23          
  24          /****************************************************************************/
  25          /** \file adc.c
  26          **
  27          **  
  28          **
  29          **  History:
  30          **  
  31          *****************************************************************************/
  32          /****************************************************************************/
  33          /*  include files
  34          *****************************************************************************/
  35          #include "adc.h"
  36          
  37          /****************************************************************************/
  38          /*  Local pre-processor symbols/macros('#define')
  39          *****************************************************************************/
  40          
  41          /****************************************************************************/
  42          /*  Global variable definitions(declared in header file with 'extern')
  43          *****************************************************************************/
  44          
  45          /****************************************************************************/
  46          /*  Local type definitions('typedef')
  47          *****************************************************************************/
  48          
  49          /****************************************************************************/
  50          /*  Local variable  definitions('static')
  51          *****************************************************************************/
  52          
  53          /****************************************************************************/
  54          /*  Local function prototypes('static')
C51 COMPILER V9.52.0.0   ADC                                                               09/07/2023 18:07:15 PAGE 2   

  55          *****************************************************************************/
  56          
  57          /****************************************************************************/
  58          /*  Function implementation - global ('extern') and local('static')
  59          *****************************************************************************/
  60          
  61          /*****************************************************************************
  62           ** \brief   ADC_Start      
  63           ** \param [in] none       
  64           ** \return  none
  65          *****************************************************************************/
  66          void  ADC_Start(void)
  67          {
  68   1        ADCON1 |= ADC_ADCON1_ADEN_Msk;
  69   1      }
  70          /*****************************************************************************
  71           ** \brief   ADC_Stop     
  72           ** \param [in] none         
  73           ** \return  none
  74          *****************************************************************************/
  75          void  ADC_Stop(void)
  76          {
  77   1        ADCON1 &= ~(ADC_ADCON1_ADEN_Msk);
  78   1      }
  79          /*****************************************************************************
  80           ** \brief   ADC_ConfigRunMode
  81           **       配置ADC的运行模式
  82           ** \param [in] 
  83           **       ADCClkDiv: ADC_CLK_DIV_2 ~ ADC_CLK_DIV_256
  84           **           ADCResultTpye: (1)ADC_RESULT_LEFT    左对齐
  85           **                (2)ADC_RESULT_RIGHT   右对齐
  86           ** \return  none
  87          *****************************************************************************/
  88          void  ADC_ConfigRunMode( uint8_t ADCClkDiv, uint8_t ADCResultTpye)
  89          {
  90   1        uint8_t Temp=0;
  91   1        
  92   1        Temp = ADCON0;
  93   1        Temp &= ~(ADC_ADCON0_ADFM_Msk);
  94   1        Temp |= ADCResultTpye;
  95   1        ADCON0 = Temp;
  96   1        
  97   1        Temp = ADCON1;
  98   1        Temp &= ~(ADC_ADCON1_ADCKS_Msk);
  99   1        Temp |= (ADCClkDiv<< ADC_ADCON1_ADCKS_Pos);
 100   1        ADCON1 = Temp;
 101   1      }
 102          
 103          /*****************************************************************************
 104           ** \brief   ADC_EnableHardwareTrig
 105           **     使能硬件触发ADC
 106           ** \param [in] none
 107           ** \return  none
 108           ** \note    
 109          *****************************************************************************/
 110          void  ADC_EnableHardwareTrig(void)
 111          {
 112   1        ADCON2 |= (ADC_ADCON2_ADCEX_Msk);
 113   1      }
 114          /*****************************************************************************
 115           ** \brief   ADC_DisableHardwareTrig
 116           **      关闭硬件触发ADC
C51 COMPILER V9.52.0.0   ADC                                                               09/07/2023 18:07:15 PAGE 3   

 117           ** \param [in] none
 118           ** \return  none
 119           ** \note    
 120          *****************************************************************************/
 121          void  ADC_DisableHardwareTrig(void)
 122          {
 123   1        ADCON2 &= ~(ADC_ADCON2_ADCEX_Msk);
 124   1      }
 125          /*****************************************************************************
 126           ** \brief   ADC_ConfigHardwareTrig
 127           **      配置硬件触发模式
 128           ** \param [in] ADCTGSource: ADC_TG_PWM0、ADC_TG_PWM2、ADC_TG_PWM4、ADC_TG_ADET
 129           **       TGMode：(1)ADC_TG_FALLING
 130           **           (2)ADC_TG_RISING
 131           **           (3)ADC_TG_PWM_PM
 132           **           (4)ADC_TG_PWM_PE
 133           ** \return  none
 134           ** \note    
 135          *****************************************************************************/
 136          void  ADC_ConfigHardwareTrig(uint8_t ADCTGSource, uint8_t TGMode)
 137          {
 138   1        uint8_t Temp=0;
 139   1        
 140   1        Temp = ADCON2;
 141   1        Temp &= ~(ADC_ADCON2_ADTGS_Msk | ADC_ADCON2_ADEGS_Msk);
 142   1        Temp |= (ADCTGSource<< ADC_ADCON2_ADTGS_Pos) | (TGMode<<ADC_ADCON2_ADEGS_Pos);
 143   1        ADCON2 = Temp;
 144   1        
 145   1      }
 146          
 147          /*****************************************************************************
 148           ** \brief   ADC_EnableChannel
 149           **      使能ADC转换通道
 150           ** \param [in]  ADCChannel: ADC_CH_0 ..... ADC_CH_31
 151           ** \return  none
 152           ** \note   
 153          *****************************************************************************/
 154          void  ADC_EnableChannel(uint8_t ADCChannel)
 155          {
 156   1        uint8_t Temp=0;
 157   1        
 158   1        Temp = ADCON0;
 159   1        Temp &= ~(ADC_ADCON0_ADCHS4_Msk);
 160   1        Temp |= ((ADCChannel & 0x10)<<3);
 161   1        ADCON0 = Temp;
 162   1        
 163   1        Temp = ADCON1;
 164   1        Temp &= ~(ADC_ADCON1_ADCHS_Msk);
 165   1        Temp |= ADCChannel & 0xf;
 166   1        ADCON1 = Temp;
 167   1        
 168   1      }
 169          
 170          /*****************************************************************************
 171           ** \brief   ADC_ConfigAN31
 172           **      配置AN31通道
 173           ** \param [in] An31Channel:（1）ADC_CH_31_BGR...ADC_CH_31_VDD
 174           ** \return  none
 175           ** \note   
 176          *****************************************************************************/
 177          void  ADC_ConfigAN31(uint8_t An31Channel)
 178          {
C51 COMPILER V9.52.0.0   ADC                                                               09/07/2023 18:07:15 PAGE 4   

 179   1        uint8_t Temp=0;
 180   1        
 181   1        Temp = ADCON0;
 182   1        Temp &= ~(ADC_ADCON0_AN31SEL_Msk);
 183   1        Temp |= (An31Channel<<ADC_ADCON0_AN31SEL_Pos);
 184   1        ADCON0 = Temp;
 185   1        
 186   1      }
 187          
 188          /*****************************************************************************
 189           ** \brief   ADC_SetTrigDelayTime
 190           **      配置硬件触发模式的延时时间
 191           ** \param [in]  TrigTime: 0~1023
 192           ** \return  none
 193           ** \note   (TrigTime + 4)) *Tsys
 194          *****************************************************************************/
 195          void  ADC_SetTrigDelayTime(uint16_t TrigTime)
 196          {
 197   1        uint8_t Temp=0;
 198   1        
 199   1        ADDLYL =  TrigTime;
 200   1        Temp = ADCMPC;
 201   1        Temp &= ~(ADC_ADCMPC_ADDLY_Msk);
 202   1        Temp |= ADC_ADCMPC_ADDLY_Msk & (TrigTime >> 8);
 203   1        ADCMPC = Temp;
 204   1        
 205   1      }
 206          
 207          /*****************************************************************************
 208           ** \brief   ADC_ConfigADCBrake
 209           **      配置ADC刹车模式 
 210           ** \param [in]  ADCBreak: (1)ADC_BRK_LESS_THAN_ADCMP   : ADRES < ADCMP 触发刹车
 211           **              (2)ADC_BRK_NOT_LESS_THAN_ADCMP : ADRES >= ADCMP 触发刹车 
 212           ** \return  none
 213           ** \note 
 214          *****************************************************************************/
 215          void  ADC_ConfigADCBrake(uint8_t ADCBrake)
 216          {
 217   1        uint8_t Temp=0;
 218   1        
 219   1        Temp = ADCMPC;
 220   1        Temp &= ~(ADC_ADCMPC_ADCMPPS_Msk);
 221   1        Temp |=  ADCBrake;
 222   1        ADCMPC = Temp;
 223   1        
 224   1      }
 225          
 226          /*****************************************************************************
 227           ** \brief   ADC_ConfigCompareValue
 228           **      配置ADC比较值
 229           ** \param [in]  ADCCompareValue: ADCMPH,ADCMPL
 230           ** \return  none
 231           ** \note 
 232          *****************************************************************************/
 233          void ADC_ConfigCompareValue(uint16_t ADCCompareValue)
 234          {
 235   1        ADCMPL = ADCCompareValue & 0xF;
 236   1        ADCMPH = ADCCompareValue>>4; 
 237   1      }
 238          
 239          /*****************************************************************************
 240           ** \brief   ADC_GetCmpResult
C51 COMPILER V9.52.0.0   ADC                                                               09/07/2023 18:07:15 PAGE 5   

 241           **      获取ADC比较结果
 242           ** \param [in]  none
 243           ** \return   0/1
 244           ** \note 
 245          *****************************************************************************/
 246          uint8_t  ADC_GetCmpResult(void)
 247          {
 248   1        return ((ADCMPC & ADC_ADCMPC_ADCMPO_Msk) ? 1:0);
 249   1      }
 250          
 251          /*****************************************************************************
 252           ** \brief   ADC_GetADCResult
 253           **      获取ADC转换结果
 254           ** \param [in]  none
 255           ** \return  16bits ADC值
 256           ** \note 
 257          *****************************************************************************/
 258          uint16_t  ADC_GetADCResult(void)
 259          {
 260   1        if(!(ADCON0 & ADC_ADCON0_ADFM_Msk))   /*左对齐*/
 261   1        {
 262   2          return (0xfff & (((ADRESH<<4) | (ADRESL>>4))));
 263   2        }
 264   1        return (0xfff & ((ADRESH<<8)| ADRESL)); 
 265   1      }
 266          
 267          /*****************************************************************************
 268           ** \brief   ADC_EnableInt
 269           **      开启ADC转换完成中断
 270           ** \param [in]  none
 271           ** \return  none
 272           ** \note 
 273          *****************************************************************************/
 274          void ADC_EnableInt(void)
 275          {
 276   1        EIE2 |= IRQ_EIE2_ADCIE_Msk;
 277   1      }
 278          /*****************************************************************************
 279           ** \brief   ADC_DisableInt
 280           **      关闭ADC转换完成中断
 281           ** \param [in]  none
 282           ** \return  none
 283           ** \note 
 284          *****************************************************************************/
 285          void ADC_DisableInt(void)
 286          {
 287   1        EIE2 &= ~(IRQ_EIE2_ADCIE_Msk);
 288   1      }
 289          /*****************************************************************************
 290           ** \brief   ADC_GetIntFlag
 291           **      获取ADC转换完成中断标志位
 292           ** \param [in]  none
 293           ** \return  0：无中断，1：产生中断
 294           ** \note 
 295          *****************************************************************************/
 296          uint8_t ADC_GetIntFlag(void)
 297          {
 298   1        return ((EIF2 & IRQ_EIF2_ADCIF_Msk) ? 1:0);
 299   1      }
 300          /*****************************************************************************
 301           ** \brief   ADC_ClearIntFlag
 302           **      清ADC转换完成中断标志位
C51 COMPILER V9.52.0.0   ADC                                                               09/07/2023 18:07:15 PAGE 6   

 303           ** \param [in] none
 304           ** \return  none
 305           ** \note   
 306          *****************************************************************************/
 307          void ADC_ClearIntFlag(void)
 308          {
 309   1        EIF2 = 0xFF & (~(IRQ_EIF2_ADCIF_Msk));
 310   1      }
 311          
 312          /*****************************************************************************
 313           ** \brief   ADC_EnableLDO
 314           **     使能ADC的LDO
 315           ** \param [in] none
 316           ** \return  none
 317           ** \note   
 318          *****************************************************************************/
 319          void ADC_EnableLDO(void)
 320          {
 321   1        ADCLDO |= ADC_ADCLDO_LDOEN_Msk;
 322   1      }
 323          /*****************************************************************************
 324           ** \brief   ADC_DisableLDO
 325           **     关闭ADC的LDO
 326           ** \param [in] none
 327           ** \return  none
 328           ** \note   
 329          *****************************************************************************/
 330          void ADC_DisableLDO(void)
 331          {
 332   1        ADCLDO &= ~(ADC_ADCLDO_LDOEN_Msk);
 333   1      }
 334          /*****************************************************************************
 335           ** \brief   ADC_ConfigADCVref
 336           **      配置ADC的VREF
 337           ** \param [in] ADCVref :(1)ADC_VREF_1P2V : Vref =1.2v
 338           **            (2)ADC_VREF_2V   : Vref =2v
 339           **            (2)ADC_VREF_2P4V : Vref =2.4v
 340           **            (2)ADC_VREF_3V   : Vref =3v
 341           ** \return  none
 342           ** \note   
 343          *****************************************************************************/
 344          void ADC_ConfigADCVref(uint8_t ADCVref)
 345          {
 346   1        uint8_t Temp=0;
 347   1        
 348   1        Temp = ADCLDO;
 349   1        Temp &= ~(ADC_ADCLDO_VSEL_Msk);
 350   1        Temp |= ADCVref;
 351   1        ADCLDO = Temp;
 352   1        
 353   1      }
 354          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    250    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
C51 COMPILER V9.52.0.0   ADC                                                               09/07/2023 18:07:15 PAGE 7   

   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
