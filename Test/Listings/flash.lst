C51 COMPILER V9.52.0.0   FLASH                                                             09/07/2023 18:07:16 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE FLASH
OBJECT MODULE PLACED IN .\Objects\flash.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Code\Lib\flash.c OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Code\CMS;.\Code\Lib
                    -;.\Code\User;.\Code\Hardware\UART) DEBUG PRINT(.\Listings\flash.lst) TABS(2) OBJECT(.\Objects\flash.obj)

line level    source

   1          /*******************************************************************************
   2          * Copyright (C) 2019 China Micro Semiconductor Limited Company. All Rights Reserved.
   3          *
   4          * This software is owned and published by:
   5          * CMS LLC, No 2609-10, Taurus Plaza, TaoyuanRoad, NanshanDistrict, Shenzhen, China.
   6          *
   7          * BY DOWNLOADING, INSTALLING OR USING THIS SOFTWARE, YOU AGREE TO BE BOUND
   8          * BY ALL THE TERMS AND CONDITIONS OF THIS AGREEMENT.
   9          *
  10          * This software contains source code for use with CMS
  11          * components. This software is licensed by CMS to be adapted only
  12          * for use in systems utilizing CMS components. CMS shall not be
  13          * responsible for misuse or illegal use of this software for devices not
  14          * supported herein. CMS is providing this software "AS IS" and will
  15          * not be responsible for issues arising from incorrect user implementation
  16          * of the software.
  17          *
  18          * This software may be replicated in part or whole for the licensed use,
  19          * with the restriction that this Disclaimer and Copyright notice must be
  20          * included with each copy of this software, whether used in part or whole,
  21          * at all times.
  22          */
  23          
  24          /****************************************************************************/
  25          /** \file FLASH.c
  26          **
  27          ** 
  28          **
  29          **  History:
  30          **  
  31          *****************************************************************************/
  32          /****************************************************************************/
  33          /*  include files
  34          *****************************************************************************/
  35          #include "flash.h"
  36          
  37          /****************************************************************************/
  38          /*  Local pre-processor symbols/macros('#define')
  39          ****************************************************************************/
  40          
  41          
  42          /****************************************************************************/
  43          /*  Global variable definitions(declared in header file with 'extern')
  44          *****************************************************************************/
  45          
  46          /****************************************************************************/
  47          /*  Local type definitions('typedef')
  48          *****************************************************************************/
  49          
  50          /****************************************************************************/
  51          /*  Local variable  definitions('static')
  52          *****************************************************************************/
  53          
  54          /****************************************************************************/
C51 COMPILER V9.52.0.0   FLASH                                                             09/07/2023 18:07:16 PAGE 2   

  55          /*  Local function prototypes('static')
  56          *****************************************************************************/
  57          
  58          /****************************************************************************/
  59          /*  Function implementation - global ('extern') and local('static')
  60          *****************************************************************************/
  61          /*****************************************************************************
  62           ** \brief  FLASH_UnLock
  63           **     解锁
  64           ** \param [in] none
  65           ** \return  none
  66           ** \note  
  67          *****************************************************************************/
  68          void FLASH_UnLock(void)
  69          {
  70   1        MLOCK = 0xAA;
  71   1      }
  72          /*****************************************************************************
  73           ** \brief  FLASH_Lock
  74           **     上锁
  75           ** \param [in] none
  76           ** \return  none
  77           ** \note  
  78          *****************************************************************************/
  79          void FLASH_Lock(void)
  80          {
  81   1        MLOCK = 0x00;
  82   1      }
  83          
  84          /*****************************************************************************
  85           ** \brief  FLASH_Write
  86           **     写缓存
  87           ** \param [in] FLASHModule ：(1)FLASH_DATA
  88           **               (2)FLASH_CODE
  89           **       Addr: 16bit   (1)FLASH_DATA_ADDR: 0x00~0x3FF;
  90           **               (2)FLASH_CODE_ADDR: 0x00~0x3FFF;  
  91           **       Data: 8bit
  92           ** \return  none
  93           ** \note  
  94          *****************************************************************************/
  95          void FLASH_Write(uint8_t FLASHModule, uint16_t Addr, uint8_t Data)
  96          {
  97   1        MDATA = Data;
  98   1        MADRL = Addr;
  99   1        MADRH = Addr>>8;
 100   1        
 101   1        if(1==EA)     
 102   1        {
 103   2          EA=0;   
 104   2          MCTRL = FLASH_WRITE | FLASHModule;    //操作FLASH期间不允许被打断
 105   2          _nop_();
 106   2          _nop_();
 107   2          _nop_();
 108   2          _nop_();
 109   2          _nop_();
 110   2          _nop_();  
 111   2          while(MCTRL & 0x01);
 112   2          EA=1;
 113   2        }
 114   1        else
 115   1        {
 116   2          MCTRL = FLASH_WRITE | FLASHModule;  
C51 COMPILER V9.52.0.0   FLASH                                                             09/07/2023 18:07:16 PAGE 3   

 117   2          _nop_();
 118   2          _nop_();
 119   2          _nop_();
 120   2          _nop_();
 121   2          _nop_();
 122   2          _nop_();    
 123   2          while(MCTRL & 0x01);    
 124   2        }
 125   1      }
 126          
 127          /*****************************************************************************
 128           ** \brief  FLASH_Read
 129           **     读缓存
 130           ** \param [in]  FLASHModule：(1)FLASH_DATA
 131           **               (2)FLASH_CODE
 132           **       Addr: 16bit   (1)FLASH_DATA_ADDR: 0x00~0x3FF;
 133           **               (2)FLASH_CODE_ADDR: 0x00~0x3FFF;  
 134           ** \return  8bit Data
 135           ** \note 
 136          *****************************************************************************/
 137          uint8_t FLASH_Read(uint8_t FLASHModule, uint16_t Addr)
 138          {
 139   1        MADRL = Addr;
 140   1        MADRH = Addr>>8;
 141   1        if(1==EA)     
 142   1        {
 143   2          EA=0;   
 144   2          MCTRL = FLASH_READ | FLASHModule;   //操作FLASH期间不允许被打断
 145   2          _nop_();
 146   2          _nop_();
 147   2          _nop_();
 148   2          _nop_();
 149   2          _nop_();
 150   2          _nop_();  
 151   2          while(MCTRL & 0x01);
 152   2          EA=1;
 153   2        }
 154   1        else
 155   1        {
 156   2          MCTRL = FLASH_READ | FLASHModule; 
 157   2          _nop_();
 158   2          _nop_();
 159   2          _nop_();
 160   2          _nop_();
 161   2          _nop_();
 162   2          _nop_();  
 163   2          while(MCTRL & 0x01);    
 164   2        }
 165   1        return (MDATA);
 166   1      }
 167          /*****************************************************************************
 168           ** \brief  FLASH_Erase
 169           **     擦除
 170           ** \param [in]  FLASHModule：(1)FLASH_DATA
 171           **               (2)FLASH_CODE
 172           **       Addr: 16bit   (1)FLASH_DATA_ADDR: 0x00~0x3FF;
 173           **               (2)FLASH_CODE_ADDR: 0x00~0x3FFF;
 174           ** \return  none
 175           ** \note 
 176          *****************************************************************************/
 177          void FLASH_Erase(uint8_t FLASHModule, uint16_t Addr)
 178          {
C51 COMPILER V9.52.0.0   FLASH                                                             09/07/2023 18:07:16 PAGE 4   

 179   1        MADRL = Addr;
 180   1        MADRH = Addr>>8;
 181   1          if(1==EA)     
 182   1        {
 183   2          EA=0;   
 184   2          MCTRL  = FLASH_ERASE | FLASHModule;   //操作FLASH期间不允许被打断
 185   2          _nop_();
 186   2          _nop_();
 187   2          _nop_();
 188   2          _nop_();
 189   2          _nop_();
 190   2          _nop_();  
 191   2          while(MCTRL & 0x01);
 192   2          EA=1;
 193   2        }
 194   1        else
 195   1        {
 196   2          MCTRL  = FLASH_ERASE | FLASHModule; 
 197   2          _nop_();
 198   2          _nop_();
 199   2          _nop_();
 200   2          _nop_();
 201   2          _nop_();
 202   2          _nop_();
 203   2          while(MCTRL & 0x01);
 204   2        }
 205   1      }
 206          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    154    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
