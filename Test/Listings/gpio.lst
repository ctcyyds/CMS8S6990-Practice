C51 COMPILER V9.52.0.0   GPIO                                                              09/08/2023 16:09:04 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE GPIO
OBJECT MODULE PLACED IN .\Objects\gpio.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Code\Lib\gpio.c OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Code\CMS;.\Code\Lib;
                    -.\Code\User;.\Code\Hardware\UART) DEBUG PRINT(.\Listings\gpio.lst) TABS(2) OBJECT(.\Objects\gpio.obj)

line level    source

   1          /*******************************************************************************
   2          * Copyright (C) 2019 China Micro Semiconductor Limited Company. All Rights Reserved.
   3          *
   4          * This software is owned and published by:
   5          * CMS LLC, No 2609-10, Taurus Plaza, TaoyuanRoad, NanshanDistrict, Shenzhen, China.
   6          *
   7          * BY DOWNLOADING, INSTALLING OR USING THIS SOFTWARE, YOU AGREE TO BE BOUND
   8          * BY ALL THE TERMS AND CONDITIONS OF THIS AGREEMENT.
   9          *
  10          * This software contains source code for use with CMS
  11          * components. This software is licensed by CMS to be adapted only
  12          * for use in systems utilizing CMS components. CMS shall not be
  13          * responsible for misuse or illegal use of this software for devices not
  14          * supported herein. CMS is providing this software "AS IS" and will
  15          * not be responsible for issues arising from incorrect user implementation
  16          * of the software.
  17          *
  18          * This software may be replicated in part or whole for the licensed use,
  19          * with the restriction that this Disclaimer and Copyright notice must be
  20          * included with each copy of this software, whether used in part or whole,
  21          * at all times.
  22          */
  23          
  24          /****************************************************************************/
  25          /** \file gpio.c
  26          **
  27          ** 
  28          **
  29          **  History:
  30          **  
  31          *****************************************************************************/
  32          /****************************************************************************/
  33          /*  include files
  34          *****************************************************************************/
  35          #include "gpio.h"
  36          
  37          /****************************************************************************/
  38          /*  Local pre-processor symbols/macros('#define')
  39          ****************************************************************************/
  40          
  41          /****************************************************************************/
  42          /*  Global variable definitions(declared in header file with 'extern')
  43          ****************************************************************************/
  44          
  45          /****************************************************************************/
  46          /*  Local type definitions('typedef')
  47          ****************************************************************************/
  48          
  49          /****************************************************************************/
  50          /*  Local variable  definitions('static')
  51          ****************************************************************************/
  52          
  53          /****************************************************************************/
  54          /*  Local function prototypes('static')
C51 COMPILER V9.52.0.0   GPIO                                                              09/08/2023 16:09:04 PAGE 2   

  55          ****************************************************************************/
  56          
  57          /****************************************************************************/
  58          /*  Function implementation - global ('extern') and local('static')
  59          ****************************************************************************/
  60          /****************************************************************************
  61           ** \brief   GPIO_ConfigGPIOMode
  62           **      配置GPIO模式
  63           ** \param [in] Port  ： GPIO0、GPIO1、GPIO2、GPIO3
  64           **        PinMSK: GPIO_PIN_0_MSK ~ GPIO_PIN_7_MSK  
  65           **            PinMode：
  66           **             (1)GPIO_OPEN_DRAIN_MODE:  开漏输出模式
  67           **             (2)GPIO_UP_MODE ：    上拉模式
  68           **             (3)GPIO_DR_MODE：     下拉模式
  69           **             (4)GPIO_LOW_CURRENT_MODE： 弱电流驱动模式
  70           **             (5)GPIO_SLOW_SLOPE_MODE：  慢斜率模式
  71           **             (6)GPIO_PUSH_PULL_MODE:    推挽输出模式
  72           **             (7)GPIO_HIGH_CURRENT_MODE：强电流驱动模式
  73           **             (8)GPIO_FAST_CURRENT_MODE：快斜率模式
  74           ** \return  none
  75           ** \note   
  76           ***************************************************************************/
  77          void GPIO_ConfigGPIOMode( uint8_t Port, uint8_t PinMSK, uint8_t PinMode)
  78          {
  79   1        switch(Port)
  80   1        {
  81   2          case GPIO0:
  82   2            {
  83   3              if(PinMode & GPIO_OPEN_DRAIN_MODE)
  84   3              {
  85   4                P0OD |= PinMSK;
  86   4              }
  87   3              if(PinMode & GPIO_UP_MODE)
  88   3              {
  89   4                P0UP |= PinMSK;
  90   4              }
  91   3              if(PinMode & GPIO_DR_MODE)
  92   3              {
  93   4                P0RD |= PinMSK;
  94   4              } 
  95   3              if(PinMode & GPIO_LOW_CURRENT_MODE)
  96   3              {
  97   4                P0DR |= PinMSK;
  98   4              }
  99   3              if(PinMode & GPIO_SLOW_SLOPE_MODE)
 100   3              {
 101   4                P0SR |= PinMSK;
 102   4              }     
 103   3            }
 104   2            break;
 105   2          case GPIO1:
 106   2            {
 107   3              if(PinMode & GPIO_OPEN_DRAIN_MODE)
 108   3              {
 109   4                P1OD |= PinMSK;
 110   4              }
 111   3              if(PinMode & GPIO_UP_MODE)
 112   3              {
 113   4                P1UP |= PinMSK;
 114   4              }
 115   3              if(PinMode & GPIO_DR_MODE)
 116   3              {
C51 COMPILER V9.52.0.0   GPIO                                                              09/08/2023 16:09:04 PAGE 3   

 117   4                P1RD |= PinMSK;
 118   4              } 
 119   3              if(PinMode & GPIO_LOW_CURRENT_MODE)
 120   3              {
 121   4                P1DR |= PinMSK;
 122   4              }
 123   3              if(PinMode & GPIO_SLOW_SLOPE_MODE)
 124   3              {
 125   4                P1SR |= PinMSK;
 126   4              }     
 127   3            }
 128   2            break;
 129   2          case GPIO2:
 130   2            {
 131   3              if(PinMode & GPIO_OPEN_DRAIN_MODE)
 132   3              {
 133   4                P2OD |= PinMSK;
 134   4              }
 135   3              if(PinMode & GPIO_UP_MODE)
 136   3              {
 137   4                P2UP |= PinMSK;
 138   4              }
 139   3              if(PinMode & GPIO_DR_MODE)
 140   3              {
 141   4                P2RD |= PinMSK;
 142   4              } 
 143   3              if(PinMode & GPIO_LOW_CURRENT_MODE)
 144   3              {
 145   4                P2DR |= PinMSK;
 146   4              }
 147   3              if(PinMode & GPIO_SLOW_SLOPE_MODE)
 148   3              {
 149   4                P2SR |= PinMSK;
 150   4              }     
 151   3            }
 152   2            break;
 153   2          case GPIO3:
 154   2            {
 155   3              if(PinMode & GPIO_OPEN_DRAIN_MODE)
 156   3              {
 157   4                P3OD |= PinMSK;
 158   4              }
 159   3              if(PinMode & GPIO_UP_MODE)
 160   3              {
 161   4                P3UP |= PinMSK;
 162   4              }
 163   3              if(PinMode & GPIO_DR_MODE)
 164   3              {
 165   4                P3RD |= PinMSK;
 166   4              } 
 167   3              if(PinMode & GPIO_LOW_CURRENT_MODE)
 168   3              {
 169   4                P3DR |= PinMSK;
 170   4              }
 171   3              if(PinMode & GPIO_SLOW_SLOPE_MODE)
 172   3              {
 173   4                P3SR |= PinMSK;
 174   4              }     
 175   3            }
 176   2            break;
 177   2          default:
 178   2            break;
C51 COMPILER V9.52.0.0   GPIO                                                              09/08/2023 16:09:04 PAGE 4   

 179   2        }
 180   1      }
 181          
 182           /********************************************************************************
 183           ** \brief   GPIO_EnableInt
 184           **      使能IO口的中断功能
 185           ** \param [in] Port  ： GPIO0、GPIO1、GPIO2、GPIO3
 186           **         PinMSK: GPIO_PIN_0_MSK ~ GPIO_PIN_7_MSK      
 187           ** \return  none
 188           ** \note   
 189           **  (1)P0的PinMSK输入值范围：GPIO_PIN_0_MSK ~ GPIO_PIN_5_MSK
 190           **  (2)P1的PinMSK输入值范围：GPIO_PIN_3_MSK ~ GPIO_PIN_7_MSK
 191           **  (3)P2的PinMSK输入值范围：GPIO_PIN_1_MSK ~ GPIO_PIN_6_MSK
 192           **  (4)P3的PinMSK输入值范围：GPIO_PIN_0_MSK ~ GPIO_PIN_2_MSK、GPIO_PIN_5_MSK、GPIO_PIN_6_MSK
 193           ******************************************************************************/
 194          void GPIO_EnableInt(uint8_t Port, uint8_t PinMSK)
 195          {
 196   1        switch(Port)
 197   1        {
 198   2          case GPIO0:
 199   2            P0EXTIE |= PinMSK;
 200   2            break;
 201   2          case GPIO1:
 202   2            P1EXTIE |= PinMSK;
 203   2            break;    
 204   2          case GPIO2:
 205   2            P2EXTIE |= PinMSK;
 206   2            break;  
 207   2          case GPIO3:
 208   2            P3EXTIE |= PinMSK;
 209   2            break;
 210   2          default:
 211   2            break;  
 212   2        }
 213   1      }
 214          /********************************************************************************
 215           ** \brief   GPIO_DisableInt
 216           **      关闭IO口的中断功能
 217           ** \param [in] Port  ： GPIO0、GPIO1、GPIO2、GPIO3
 218           **         PinMSK: GPIO_PIN_0_MSK ~ GPIO_PIN_7_MSK      
 219           ** \return  none
 220           ** \note   
 221           **  (1)P0的PinMSK输入值范围：GPIO_PIN_0_MSK ~ GPIO_PIN_5_MSK
 222           **  (2)P1的PinMSK输入值范围：GPIO_PIN_3_MSK ~ GPIO_PIN_7_MSK
 223           **  (3)P2的PinMSK输入值范围：GPIO_PIN_1_MSK ~ GPIO_PIN_6_MSK
 224           **  (4)P3的PinMSK输入值范围：GPIO_PIN_0_MSK ~ GPIO_PIN_2_MSK、GPIO_PIN_5_MSK、GPIO_PIN_6_MSK
 225           ******************************************************************************/
 226          void GPIO_DisableInt(uint8_t Port, uint8_t PinMSK)
 227          {
 228   1        switch(Port)
 229   1        {
 230   2          case GPIO0:
 231   2            P0EXTIE &= ~PinMSK;
 232   2            break;
 233   2          case GPIO1:
 234   2            P1EXTIE &= ~PinMSK;
 235   2            break;    
 236   2          case GPIO2:
 237   2            P2EXTIE &= ~PinMSK;
 238   2            break;  
 239   2          case GPIO3:
 240   2            P3EXTIE &= ~PinMSK;
C51 COMPILER V9.52.0.0   GPIO                                                              09/08/2023 16:09:04 PAGE 5   

 241   2            break;
 242   2          default:
 243   2            break;  
 244   2        }
 245   1      }
 246          
 247           /******************************************************************************
 248           ** \brief   GPIO_GetIntFlag
 249           **      获取中断标志
 250           ** \param [in] Port  ： GPIO0、GPIO1、GPIO2、GPIO3
 251           **         PinNum:  GPIO_PIN_0~GPIO_PIN_7 (0~7)     
 252           ** \return  0：无中断产生
 253           **      1：有中断产生
 254           ** \note  
 255           **  (1)P0的PinNum输入值范围：GPIO_PIN_0~GPIO_PIN_5
 256           **  (2)P1的PinNum输入值范围：GPIO_PIN_3~GPIO_PIN_7
 257           **  (3)P2的PinNum输入值范围：GPIO_PIN_1~GPIO_PIN_6
 258           **  (4)P3的PinNum输入值范围：GPIO_PIN_0~GPIO_PIN_2、GPIO_PIN_5、GPIO_PIN_6
 259           ******************************************************************************/
 260          uint8_t  GPIO_GetIntFlag(uint8_t Port, uint8_t PinNum)
 261          {
 262   1        uint8_t PinIntFlag = 0;
 263   1        switch(Port)
 264   1        {
 265   2          case GPIO0:
 266   2            PinIntFlag = P0EXTIF & (1<<PinNum);
 267   2            break;
 268   2          case GPIO1:
 269   2            PinIntFlag = P1EXTIF & (1<<PinNum);
 270   2            break;    
 271   2          case GPIO2:
 272   2            PinIntFlag = P2EXTIF & (1<<PinNum);
 273   2            break;  
 274   2          case GPIO3:
 275   2            PinIntFlag = P3EXTIF & (1<<PinNum);
 276   2            break;
 277   2          default:
 278   2            break;  
 279   2        }
 280   1        return( (PinIntFlag)? 1:0);
 281   1      }
 282           /********************************************************************************
 283           ** \brief   GPIO_ClearIntFlag
 284           **     清除中断标志位
 285           ** \param [in] Port  ： GPIO0、GPIO1、GPIO2、GPIO3
 286           **         PinNum:  GPIO_PIN_0~GPIO_PIN_7 (0~7)     
 287           ** \return  none
 288           ** \note  
 289           **  (1)P0的PinNum输入值范围：GPIO_PIN_0~GPIO_PIN_5
 290           **  (2)P1的PinNum输入值范围：GPIO_PIN_3~GPIO_PIN_7
 291           **  (3)P2的PinNum输入值范围：GPIO_PIN_1~GPIO_PIN_6
 292           **  (4)P3的PinNum输入值范围：GPIO_PIN_0~GPIO_PIN_2、GPIO_PIN_5、GPIO_PIN_6   
 293           ******************************************************************************/
 294          void GPIO_ClearIntFlag(uint8_t Port, uint8_t PinNum)
 295          {
 296   1        switch(Port)
 297   1        {
 298   2          case GPIO0:
 299   2            P0EXTIF = 0xff &(~(1<<PinNum));
 300   2            break;
 301   2          case GPIO1:
 302   2            P1EXTIF = 0xff &(~(1<<PinNum));     
C51 COMPILER V9.52.0.0   GPIO                                                              09/08/2023 16:09:04 PAGE 6   

 303   2            break;    
 304   2          case GPIO2:
 305   2            P2EXTIF = 0xff &(~(1<<PinNum));
 306   2            break;  
 307   2          case GPIO3:
 308   2            P3EXTIF = 0xff &(~(1<<PinNum));
 309   2            break;
 310   2          default:
 311   2            break;  
 312   2        }
 313   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    450    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
